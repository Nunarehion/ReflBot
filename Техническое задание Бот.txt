 







Техническое задание 
на разработку приложения 
Telegram-бот с реферальной системой

Оглавление
1. Основное описание проекта (User Stories)	3
2. Глоссарий терминов	4
3. Цели и задачи	5
4.  Требования к проекту	6
4.1. Функциональные требования	6
5. Сущьности системы	7
5.1.1. Пользователи	7
5.1.2. Рефералы	7
5.1.3. Администраторы	7
5.1.4. Транзакции баллов	8
6. Диалоговые элементы	9
6.1. Сообщения	9
6.2. Кнопки	10
6.3. Команды	11
6.3.1. Команды для пользователей	11
6.3.2. Команды для администраторов	11
7. Пользовательские сценарии	12
7.1. Регистрация нового пользователя	13
7.1.1. UC-Регистрация	13
7.2. Ввод реферального кода после регистрации	14
7.2.1. UC-Ввод реферального кода после регистрации	14
7.3. Просмотр информации о пользователе	15
7.3.1. UC-Просмотр информации о пользователе	15
7.4. Активация пользователя администратором	16
7.4.1. UC-Активация пользователя	16
7.5. Управление баллами пользователя администратором	17
7.5.1. UC-Управление баллами	17
8. Риски	18
8.1. Технические риски	18
8.2. Бизнес-риски	18


1. Основное описание проекта (User Stories)
Проект представляет собой разработку Telegram-бота, главной задачей которого является создание и управление реферальной системой. Любой пользователь может зарегистрироваться в боте, указав свой номер телефона без подтверждения, и сразу же получить уникальный реферальный код. Этот код можно использовать для приглашения новых участников. 
При регистрации пользователь может ввести реферальный код другого участника, и эта возможность сохраняется в течение 24 часов. За использование реферального кода при регистрации новому участнику сразу начисляется 100 баллов. Владелец кода также получает вознаграждение: 25 баллов начисляются сразу, а после активации реферала — ещё 75, что в сумме составляет 100 баллов. 
Пользователь всегда получает уведомление о зачислении баллов. Каждый зарегистрированный участник имеет возможность просмотреть список своих рефералов и узнать текущее количество баллов. По команде «/help» пользователь может получить информацию о реферальной системе, а также связаться с администратором или перейти в соответствующий топик в социальной сети. 
Для администратора предусмотрен широкий набор инструментов: он может активировать участников, просматривать информацию о любом пользователе по реферальному коду, номеру телефона, ID или сообщению. Кроме того, администратор имеет доступ к списку всех пользователей и может получить список рефералов конкретного участника. Ему также доступна возможность начислять, отнимать или обнулять все баллы у пользователя. Текущий этап проекта направлен на реализацию всех этих функций, а основная задача на будущее — сделать накопленные баллы применимыми.

2. Глоссарий терминов
№ П/П
термин
описание
    1. 
Пользователь
Любое лицо, которое зарегистрировалось в Telegram-боте.
    2. 
Реферал
Новый пользователь, который зарегистрировался, используя реферальный код другого участника.
    3. 
Администратор
Лицо, имеющее специальные права для управления системой, включая доступ к данным пользователей и их баллам.
    4. 
Реферальный код
Уникальный набор символов, который автоматически присваивается каждому пользователю после регистрации. Используется для приглашения новых участников.
    5. 
Баллы
Внутренняя единица вознаграждения, которая начисляется пользователям за участие в реферальной системе.
    6. 
Активация реферала
Событие, которое происходит после того, как приглашённый пользователь выполнил какое-либо целевое действие (например, подтвердил регистрацию, совершил первую покупку и т. д.). После активации реферал и его владелец получают вознаграждение
    7. 
Регистрация
Процесс, в ходе которого пользователь вводит свой номер телефона в боте для получения доступа к системе.
    8. 
Начисление баллов
Автоматический или ручной процесс добавления баллов на счёт пользователя.
    9. 
Списание баллов
Процесс вычета баллов со счёта пользователя, осуществляемый администратором.
    10. 
Обнуление баллов
Команда для администратора, позволяющая сбросить текущий баланс баллов пользователя до нуля.
    11. 
Telegram-бот
Основной программный продукт, который обеспечивает взаимодействие пользователя с реферальной системой.
    12. 
Социальная сеть (топик)
Внешний ресурс, на который бот предоставляет ссылку для получения дополнительной информации о реферальной системе.

3. Цели и задачи
Цель проекта: Создать Telegram-бот с реферальной системой в рамках которой, необходимо обеспечить пользователю возможность приглашать друзей и получать вознаграждение за успешные рефералы.
       Основная бизнес-цель: Привлечь новых пользователей
Ожидаемый результат: Увеличение числа новых пользователей на 30% в течение 3 месяцев с момента запуска реферальной системы.
Задачи проекта:
    1. Разработка основного функционала:
        ◦ Реализовать функционал регистрации пользователей через номер телефона.
        ◦ Создать механизм отслеживания рефералов и начисления реферальных кодов.
        ◦ Разработать систему вознаграждений (начисление баллов) за приглашение и активацию рефералов.
        ◦ Обеспечить отправку уведомлений пользователям о зачислении баллов.
    2. Разработка пользовательского интерфейса:
        ◦ Создать удобный интерфейс для взаимодействия пользователей с ботом.
        ◦ Обеспечить пользователям доступ к списку своих рефералов и информации о текущем количестве баллов.
        ◦ Реализовать возможность связи пользователей с администратором/поддержкой.
    3. Разработка функционала для администратора:
        ◦ Создать инструменты для управления пользователями, включая их активацию.
        ◦ Реализовать возможность просмотра информации о пользователях (по ID, телефону, коду).
        ◦ Предоставить администратору доступ к спискам рефералов и общему списку всех пользователей.
        ◦ Разработать функционал для начисления и списания баллов у пользователей.
4.  Требования к проекту
4.1. Функциональные требования
№ П/П
Наименование требования
Краткое описание
    1. 
Регистрация по номеру телефона
Пользователь должен иметь возможность зарегистрироваться в боте, указав свой номер телефона без дополнительного подтверждения.
    2. 
Автоматическое присвоение рефкода
После регистрации пользователю автоматически присваивается уникальный реферальный код.
    3. 
Ввод реферального кода при регистрации
Пользователь должен иметь возможность ввести реферальный код другого участника в процессе регистрации.
    4. 
Ввод реферального кода после регистрации
Пользователь должен иметь возможность ввести реферальный код в течение 48 часов после регистрации.
    5. 
Начисление баллов (новому)
Пользователю, который использовал реферальный код, начисляется 100 баллов.
    6. 
Начисление баллов (приглашающему)
Владельцу реферального кода начисляется 25 баллов за его использование новым пользователем.
    7. 
Начисление баллов за активацию
Владельцу реферального кода начисляется ещё 75 баллов после активации приглашённого пользователя.
    8. 
Уведомление о начислении баллов
Пользователь получает уведомление каждый раз, когда ему начисляются баллы.
    9. 
Просмотр баланса баллов
Пользователь должен иметь возможность посмотреть текущее количество своих баллов.
    10. 
Просмотр списка своих рефералов
Пользователь должен иметь возможность увидеть список всех приглашённых им рефералов.
    11. 
Информационная команда /help
По команде /help бот должен предоставлять информацию о реферальной системе, контакты администратора и ссылку на топик в соцсети.
    12. 
Активация участника
Администратор должен иметь возможность вручную активировать пользователя.
    13. 
Просмотр информации о пользователе
Администратор должен иметь доступ к информации о пользователе по реферальному коду, номеру телефона, ID или сообщению.
    14. 
Просмотр списка всех рефералов
Администратор должен иметь возможность получить список всех рефералов конкретного пользователя.
    15. 
Просмотр списка всех пользователей
Администратор должен иметь возможность получить список всех зарегистрированных пользователей.
    16. 
Начисление и списание баллов
Администратор должен иметь возможность вручную начислять и списывать баллы у пользователей.
    17. 
Команда «забрать все баллы»
Администратору должна быть доступна специальная команда для обнуления баланса баллов пользователя.

5. Сущьности системы
5.1.1. Пользователи
Поле
Тип данных
Описание
id
INT (Primary Key)
Уникальный идентификатор пользователя
telegram_id
BIGINT
ID пользователя в Telegram
phone_number
VARCHAR(20)
Номер телефона пользователя
referral_code
VARCHAR(10)
Уникальный реферальный код
points
INT
Текущий баланс баллов
referrer_id
INT (Foreign Key)
ID пользователя, который пригласил (связь с этой же таблицей)
is_activated
BOOLEAN
Статус активации пользователя
registration_date
TIMESTAMP
Дата и время регистрации

5.1.2. Рефералы
Поле
Тип данных
Описание
id
INT (Primary Key)
Уникальный идентификатор записи
referrer_id
INT (Foreign Key)
ID пользователя, который пригласил
referred_user_id
INT (Foreign Key)
ID приглашённого пользователя
status
ENUM
Статус реферала (например, pending, activated)

5.1.3. Администраторы
Поле
Тип данных
Описание
id
INT (Primary Key)
Уникальный идентификатор администратора
telegram_id
BIGINT
ID администратора в Telegram
username
VARCHAR(50)
Имя пользователя в Telegram
access_level
ENUM
Уровень доступа администратора (например, full, limited)


5.1.4. Транзакции баллов
Поле
Тип данных
Описание
id
INT (Primary Key)
Уникальный идентификатор администратора
user_id
INT
Идентификатор пользователя, чей баланс баллов изменился.
amount
INT
Количество начисленных или списанных баллов.
transaction_type
ENUM
Тип транзакции (например, "начисление", "списание", "обнуление").
reason
ENUM
Причина транзакции (например, "использование реферального кода", "активация реферала", "начислено администратором").
timestamp
TIMESTAMP
Дата и время совершения транзакции.

6. Диалоговые элементы
6.1. Сообщения

Название сообщения
Событие/Триггер
Текст сообщения
Кнопки
Приветственное сообщение (старт)
Пользователь отправляет /start
Привет! Я — бот-помощник реферальной системы. Зарегистрируйтесь, чтобы получить свой реферальный код и начать зарабатывать баллы!
["Зарегистрироваться"], ["Подробнее"] (ссылка)
Запрос номера телефона
Пользователь нажал "Зарегистрироваться"
Пожалуйста, введите ваш номер телефона, чтобы продолжить регистрацию.
-
Запрос реферального кода
Успешная регистрация по номеру
Спасибо! Регистрация почти завершена. Если у вас есть реферальный код, введите его прямо сейчас, чтобы получить 50 баллов. <br/> Важно: у вас есть 48 часов, чтобы ввести код.
["Пропустить"]
Сообщение об ошибке (номер)
Пользователь ввёл некорректный номер телефона
Кажется, вы ввели номер в неправильном формате. Пожалуйста, попробуйте снова. Если проблема повторяется, обратитесь к администратору.
-
Подтверждение регистрации
Регистрация прошла успешно
Поздравляем! Ваш аккаунт зарегистрирован. Ваш личный реферальный код: [КОД ПОЛЬЗОВАТЕЛЯ]. <br/> Ваш баланс: 0 баллов. <br/> Для получения бонусов аккаунт должен быть активирован администратором.
-
Уведомление о начислении баллов
Система начислила баллы пользователю
Вам начислено [КОЛИЧЕСТВО БАЛЛОВ]! Ваш текущий баланс: [ТЕКУЩИЙ БАЛАНС].
-


6.2. Кнопки

Название кнопки
Текст на кнопке
Тип кнопки
Назначение/Действие
Связанное сообщение
Регистрация
Зарегистрироваться
Inline-кнопка
Запускает процесс регистрации; бот запрашивает номер телефона.
Приветственное сообщение (старт)
Подробнее
Подробнее
Inline-кнопка
Перенаправляет пользователя на топик в соцсети с информацией о реферальной системе.
Приветственное сообщение (старт)
Пропустить
Пропустить
Inline-кнопка
Позволяет пользователю пропустить ввод реферального кода.
Запрос реферального кода
Просмотр баланса
Баланс
Inline-кнопка
Показывает текущее количество баллов пользователя.
Главное меню
Мои рефералы
Мои рефералы
Inline-кнопка
Показывает список всех приглашённых пользователем рефералов.
Главное меню
Связь с админом
Связаться с админом
Inline-кнопка
Начинает сессию для отправки сообщения администратору.
Главное меню


6.3. Команды
6.3.1. Команды для пользователей
Название команды
Назначение/Действие
Связанное сообщение
/start
Инициализирует взаимодействие с ботом.
Приветственное сообщение (старт)
Приветственное сообщение, предлагающее пользователю зарегистрироваться или получить дополнительную информацию.
/help
Предоставляет справочную информацию о боте.
Сообщение с описанием функциональности бота и контактами администратора.
/profile
Показывает персональную информацию пользователя.
Сообщение, содержащее текущий баланс баллов пользователя и список его рефералов.

6.3.2. Команды для администраторов
Название команды
Назначение/Действие
Связанное сообщение
/activate [ID_пользователя]
Активация пользователя.
Сообщение администратору: Подтверждение об успешной активации.
Сообщение пригласившему пользователю: Уведомление о начислении 75 баллов за активацию реферала.
/addpoints [ID_пользователя] [количество]
Подтверждение об успешном начислении.Ручное начисление баллов пользователю.
Сообщение администратору: Подтверждение об успешном начислении.
Уведомление о начислении баллов администратором.
/subtractpoints [ID_пользователя] [количество]
Ручное списание баллов с баланса пользователя
Сообщение администратору: Подтверждение об успешном списании.
Сообщение пользователю: Уведомление о списании баллов администратором.
/zeropoints [ID_пользователя]
Обнуление баланса баллов пользователя.
Сообщение администратору: Подтверждение об успешном обнулении.
Сообщение пользователю: Уведомление о том, что его баланс был обнулён администратором.

7. Пользовательские сценарии
№
Наименование
Действующее лицо
Краткое описание
    1. 
Регистрация нового пользователя
Незарегистрированный пользователь.
Пользователь начинает общение с ботом, вводит свой номер телефона и успешно регистрируется в системе.
    2. 
Ввод реферального кода
Новый пользователь.
Пользователь вводит реферальный код другого участника, либо во время регистрации, либо в течение 48 часов после неё.
    3. 
Просмотр баланса баллов
Зарегистрированный пользователь.
Пользователь запрашивает информацию о своих баллах и получает актуальный баланс.
    4. 
Просмотр списка рефералов
Зарегистрированный пользователь.
Пользователь запрашивает список своих рефералов и получает информацию о приглашенных им участниках.
    5. 
Получение справки
Зарегистрированный пользователь.
Пользователь отправляет команду и получает информационное сообщение о реферальной системе, контактах администратора и ссылке на топик в соцсети.
    6. 
Просмотр всех пользователей (для администратора)
Администратор
Администратор запрашивает полный список всех зарегистрированных пользователей.
    7. 
Просмотр информации о конкретном пользователе
Администратор
Администратор ищет пользователя по ID, номеру телефона или реферальному коду и получает о нём подробную информацию.
    8. 
Управление баллами пользователя
Администратор
Администратор вручную начисляет, списывает или обнуляет баллы у конкретного пользователя.
    9. 
Активация пользователя (для администратора)
Администратор
Администратор вручную активирует пользователя, инициируя начисление дополнительных баллов пригласившему его участнику.


7.1. Регистрация нового пользователя

7.1.1. UC-Регистрация
Название: Регистрация в боте.
Цель: Зарегистрировать нового пользователя в системе.
Действующее лицо: Незарегистрированный пользователь.
Предусловие: Пользователь открыл Telegram-бота.
Тригер: Пользователь отправил команду start
Основной сценарий
    1. Пользователь отправляет команду /start.
    2. Бот проверяет, есть ли пользователь в базе данных.
    3. Бот определяет, что пользователь не зарегистрирован, и отправляет сообщение с предложением регистрации, а также с кнопками "Зарегистрироваться" и "Подробнее" (ссылка на топик в соцсети).
    4. Пользователь нажимает кнопку "Зарегистрироваться".
    5. Бот запрашивает у пользователя номер телефона.
    6. Пользователь отправляет свой номер телефона.
    7. Бот успешно валидирует номер и подтверждает, что он не зарегистрирован ранее.
    8. Бот отправляет сообщение с предложением ввести реферальный код другого участника и информирует, что это можно сделать в течение 48 часов после регистрации.
    9. Пользователь вводит реферальный код.
    10. Бот регистрирует пользователя, присваивает ему уникальный реферальный код, начисляет пригласившему 25 баллов и отправляет ему соответствующее уведомление.
    11. Бот отправляет новому пользователю сообщение, что его аккаунт зарегистрирован, но неактивирован. В сообщении также говорится, что на баланс зачислено 100 баллов, а для их применения необходимо обратится к администратору и активировать аккаунт.
Альтернативнывный
сценарий 1: Пользователь не вводит реферальный код
    1. Действия 1-8 основного потока.
    2. Пользователь игнорирует запрос на ввод кода или нажимает "Пропустить".
    3. Бот регистрирует пользователя без привязки к рефералу и отправляет сообщение, указанное в шаге 11 основного потока.
Номер уже зарегистрирован
    1. Действия 1-6 основного потока.
    2. Пользователь отправляет номер, который уже есть в базе.
    3. Бот отправляет сообщение о том, что пользователь уже зарегистрирован, и предлагает перейти к основным функциям, например, просмотру баланса.
    4. Сценарий завершается.


7.2. Ввод реферального кода после регистрации
7.2.1. UC-Ввод реферального кода после регистрации
Цель: Позволить зарегистрированному пользователю ввести реферальный код для получения баллов.
Действующее лицо: Зарегистрированный пользователь.
Предусловие: Пользователь зарегистрирован в боте, и с момента регистрации не прошло 48 часов.
Тригер: Пользователь отправляет команду для ввода реферального кода /refcode или выбирает соответствующую кнопку.
Основной сценарий
    1. Пользователь отправляет команду или нажимает кнопку для ввода реферального кода.
    2. Бот проверяет, прошло ли с момента регистрации пользователя 48 часов.
    3. Бот запрашивает у пользователя реферальный код.
    4. Пользователь отправляет код.
    5. Бот проверяет код на валидность (существует ли он и не принадлежит ли самому пользователю).
    6. Бот регистрирует связь между пользователем и пригласившим его участником.
    7. Бот начисляет новому пользователю 100 баллов и отправляет ему уведомление.
    8. Бот начисляет пригласившему участнику 25 баллов и отправляет ему соответствующее уведомление.
    9. Бот сообщает новому пользователю, что он получил баллы, а его аккаунт теперь ожидает активации.
Превышен лимит времени 
(48 часов)
    1. Бот определяет, что с момента регистрации прошло более 48 часов.
    2. Бот отправляет сообщение о том, что время для ввода реферального кода истекло.
    3. Сценарий завершается.
Неверный реферальный код
    1. Бот определяет, что введённый код не существует или невалиден.
    2. Бот отправляет сообщение об ошибке и предлагает попробовать ещё раз.
    3. Сценарий возвращается к шагу 3 основного потока.
Ввод своего реферального кода
    1. Пользователь вводит свой собственный реферальный код.
    2. Бот отправляет сообщение об ошибке, что нельзя использовать свой код.
    3. Сценарий возвращается к шагу 3 основного потока.


7.3. Просмотр информации о пользователе
7.3.1. UC-Просмотр информации о пользователе
Цель: 	Предоставить пользователю доступ к информации о его текущем балансе баллов и списке приглашенных рефералов.
Действующее лицо: Зарегистрированный пользователь.
Предусловие: Пользователь зарегистрирован в боте и имеет доступ к главному меню.
Тригер: Пользователь отправляет команду /balance, либо нажимает соответствующие кнопки в меню.
Основной сценарий
Успешный просмотр информации
    1. Пользователь отправляет команду или нажимает кнопку для просмотра баланса баллов.
    2. Бот обращается к базе данных, чтобы получить информацию о текущем балансе пользователя.
    3. Бот отправляет сообщение с актуальным количеством баллов.
    4. Пользователь отправляет команду или нажимает кнопку для просмотра списка своих рефералов.
    5. Бот обращается к базе данных, чтобы получить список рефералов пользователя.
    6. Бот отправляет сообщение со списком рефералов. Для каждого реферала бот указывает его статус (например, "активирован" или "ожидает активации").
У пользователя нет рефералов
    1. Пользователь вводит свой собственный реферальный код.
    2. Бот отправляет сообщение об ошибке, что нельзя использовать свой код.
    3. Сценарий возвращается к шагу 3 основного потока.

7.4. Активация пользователя администратором
7.4.1. UC-Активация пользователя
Цель: 	Активировать зарегистрированного пользователя, чтобы завершить начисление баллов его рефералу.
Действующее лицо: Администратор.
Предусловие: Администратор имеет доступ к специальным командам управления. Пользователь, которого нужно активировать, уже зарегистрирован, но имеет статус "неактивирован".
Тригер: Администратор отправляет команду активации с указанием ID пользователя (например, /activate <ID_пользователя>).
Основной сценарий
Успешный просмотр информации
    1. Администратор отправляет команду /activate с ID пользователя, которого нужно активировать.
    2. Бот проверяет права администратора и наличие указанного пользователя в базе данных.
    3. Бот проверяет статус пользователя и определяет, что он неактивирован.
    4. Бот изменяет статус пользователя на "активирован".
    5. Бот проверяет, был ли у активированного пользователя реферал.
    6. Если реферал существует, бот начисляет владельцу реферала 75 баллов и отправляет уведомление о том, что его реферал был активирован.
    7. Бот отправляет администратору подтверждающее сообщение об успешной активации.
Пользователь уже активирован
    1. Действия 1-3 основного сценария.
    2. Бот определяет, что указанный пользователь уже активирован.
    3. Бот отправляет администратору сообщение о том, что этот пользователь уже активен.
    4. Сценарий завершается.
Пользователь не найден
    1. Действия 1-2 основного сценария.
    2. Бот определяет, что пользователь с таким ID не существует.
    3. Бот отправляет администратору сообщение об ошибке, что пользователь не найден.
    4. Сценарий завершается.

7.5. Управление баллами пользователя администратором
7.5.1. UC-Управление баллами
Цель: 	Позволить администратору вручную изменять баланс баллов любого пользователя.
Действующее лицо: Администратор.
Предусловие: Администратор имеет доступ к специальным командам управления. Пользователь, чей баланс меняется, существует в системе.
Тригер: Администратор отправляет одну из команд для управления баллами (например, /addpoints, /subtractpoints, /zeropoints).
Основной сценарий 1
Успешный просмотр информации
    1. Администратор отправляет команду /addpoints [ID_пользователя] [количество].
    2. Бот проверяет права администратора и валидирует ID пользователя и количество баллов.
    3. Бот добавляет указанное количество баллов к текущему балансу пользователя.
    4. Бот отправляет администратору подтверждающее сообщение об успешном начислении.
    5. Бот отправляет пользователю уведомление о том, что его баланс был изменён администратором.
Основной поток 2: Списание баллов
    1. Администратор отправляет команду /subtractpoints [ID_пользователя] [количество].
    2. Бот проверяет права администратора и валидирует ID пользователя и количество баллов.
    3. Бот вычитает указанное количество баллов из текущего баланса пользователя.
    4. Бот отправляет администратору подтверждающее сообщение об успешном списании.
    5. Бот отправляет пользователю уведомление о том, что его баланс был изменён администратором.
Основной поток 3: Обнуление баллов
    1. Администратор отправляет команду /zeropoints [ID_пользователя].
    2. Бот проверяет права администратора и валидирует ID пользователя.
    3. Бот устанавливает баланс баллов пользователя на 0.
    4. Бот отправляет администратору подтверждающее сообщение об успешном обнулении.
    5. Бот отправляет пользователю уведомление о том, что его баланс был обнулён администратором.
Пользователь не найден
Если указанный ID не существует, бот отправляет администратору сообщение об ошибке.
Некорректная команда
Если команда содержит неверный формат или количество баллов указано неверно, бот отправляет администратору сообщение с инструкцией по использованию команды.



8. Риски
8.1. Технические риски

    
Проблемы с API Telegram
Изменения в API Telegram могут потребовать внесения правок в код бота. Кроме того, ограничения API (например, на частоту запросов) могут стать проблемой при большом количестве пользователей.
Проблемы с безопасностью
Указание, что регистрация проходит "без подтверждения", может привести к созданию большого количества фейковых аккаунтов или "твинков" для злоупотребления реферальной системой. Это может потребовать дополнительных механизмов защиты, которые не были описаны в ТЗ.
Масштабируемость базы данных
По мере роста числа пользователей и транзакций, база данных может столкнуться с проблемами производительности, если ее архитектура не была спроектирована с учетом масштабируемости.

8.2. Бизнес-риски
Низкий уровень активации пользователей
Если условие активации будет слишком сложным, пользователи не будут его выполнять. Это приведет к тому, что приглашающие пользователи не получат основную часть вознаграждения, что, в свою очередь, снизит их мотивацию к привлечению новых людей.
Неэффективность реферальной системы
 Если реферальная система не будет достаточно привлекательной, она не сможет достичь заявленной цели по увеличению числа новых пользователей на 30% за три месяца.
Злоупотребления
Риск создания "твинков" для накрутки баллов. Несмотря на ручную активацию, администратор может не справиться с большим потоком заявок, что приведет к пропускам недобросовестных пользователей.

